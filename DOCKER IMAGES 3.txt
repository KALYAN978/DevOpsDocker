How many images are available on this host?


$ docker images
REPOSITORY                      TAG       IMAGE ID       CREATED        SIZE
redis                           latest    eca1379fe8b5   6 months ago   117MB
mysql                           latest    8189e588b0e8   6 months ago   564MB
nginx                           latest    6efc10a0510f   6 months ago   142MB
postgres                        latest    ceccf204404e   6 months ago   379MB
nginx                           alpine    8e75cbc5b25c   7 months ago   41MB
alpine                          latest    9ed4aefc74f6   7 months ago   7.04MB
ubuntu                          latest    08d22c0ceb15   8 months ago   77.8MB
kodekloud/simple-webapp-mysql   latest    129dd9f67367   5 years ago    96.6MB
kodekloud/simple-webapp         latest    c6e3cd9aae36   5 years ago    84.8MB
$ 
============================================================================

What is the size of the ubuntu image?


$ docker images
REPOSITORY                      TAG       IMAGE ID       CREATED        SIZE
redis                           latest    eca1379fe8b5   6 months ago   117MB
mysql                           latest    8189e588b0e8   6 months ago   564MB
nginx                           latest    6efc10a0510f   6 months ago   142MB
postgres                        latest    ceccf204404e   6 months ago   379MB
nginx                           alpine    8e75cbc5b25c   7 months ago   41MB
alpine                          latest    9ed4aefc74f6   7 months ago   7.04MB
ubuntu                          latest    08d22c0ceb15   8 months ago   77.8MB
kodekloud/simple-webapp-mysql   latest    129dd9f67367   5 years ago    96.6MB
kodekloud/simple-webapp         latest    c6e3cd9aae36   5 years ago    84.8MB
$ ^C
$ 
===========================================================================

We just pulled a new image. What is the tag on the newly pulled NGINX image?



$ docker images 
REPOSITORY                      TAG           IMAGE ID       CREATED        SIZE
redis                           latest        eca1379fe8b5   6 months ago   117MB
mysql                           latest        8189e588b0e8   6 months ago   564MB
nginx                           latest        6efc10a0510f   6 months ago   142MB
postgres                        latest        ceccf204404e   6 months ago   379MB
nginx                           alpine        8e75cbc5b25c   7 months ago   41MB
alpine                          latest        9ed4aefc74f6   7 months ago   7.04MB
ubuntu                          latest        08d22c0ceb15   8 months ago   77.8MB
nginx                           1.14-alpine   8a2fb25a19f5   4 years ago    16MB
kodekloud/simple-webapp-mysql   latest        129dd9f67367   5 years ago    96.6MB
kodekloud/simple-webapp         latest        c6e3cd9aae36   5 years ago    84.8MB
$ 

===========================================================================


We just downloaded the code of an application. What is the base image used in the Dockerfile?
Inspect the Dockerfile in the webapp-color directory.



$ /root/Dockerfile/webapp-color
-bash: /root/Dockerfile/webapp-color: No such file or directory
$ cd /root/Dockerfile/webapp-color
-bash: cd: /root/Dockerfile/webapp-color: No such file or directory
$ vi /root/webapp-color/Dockerfile
$ 


FROM python:3.6
  
RUN pip install flask

COPY . /opt/

EXPOSE 8080

WORKDIR /opt

ENTRYPOINT ["python", "app.py"]
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
"~/webapp-color/Dockerfile" 11L, 113C

===========================================================================

To what location within the container is the application code copied to during a Docker build?
Inspect the Dockerfile in the webapp-color directory.


$ vi /root/webapp-color/Dockerfile
$ 


FROM python:3.6
  
RUN pip install flask

COPY . /opt/

EXPOSE 8080

WORKDIR /opt

ENTRYPOINT ["python", "app.py"]
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
"~/webapp-color/Dockerfile" 11L, 113C

==========================================================================

When a container is created using the image built with this Dockerfile, what is the command used to RUN the application inside it.
Inspect the Dockerfile in the webapp-color directory.



$ vi /root/webapp-color/Dockerfile
$ 


FROM python:3.6
  
RUN pip install flask

COPY . /opt/

EXPOSE 8080

WORKDIR /opt

ENTRYPOINT ["python", "app.py"]
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
"~/webapp-color/Dockerfile" 11L, 113C
==========================================================================


What port is the web application run within the container?
Inspect the Dockerfile in the webapp-color directory.
Build a docker image using the Dockerfile and name it webapp-color. No tag to be specified.




$ vi /root/webapp-color/Dockerfile
$ 


FROM python:3.6
  
RUN pip install flask

COPY . /opt/

EXPOSE 8080

WORKDIR /opt

ENTRYPOINT ["python", "app.py"]
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
"~/webapp-color/Dockerfile" 11L, 113C

==========================================================================

Build a docker image using the Dockerfile and name it webapp-color. No tag to be specified.




Build an image from a Dockerfile
$ docker build -t webapp-color .
Sending build context to Docker daemon  125.4kB
Step 1/6 : FROM python:3.6
3.6: Pulling from library/python
0e29546d541c: Pull complete 
9b829c73b52b: Pull complete 
cb5b7ae36172: Pull complete 
6494e4811622: Pull complete 
6f9f74896dfa: Pull complete 
5e3b1213efc5: Pull complete 
9fddfdc56334: Pull complete 
404f02044bac: Pull complete 
c4f42be2be53: Pull complete 
Digest: sha256:f8652afaf88c25f0d22354d547d892591067aa4026a7fa9a6819df9f300af6fc
Status: Downloaded newer image for python:3.6
 ---> 54260638d07c
Step 2/6 : RUN pip install flask
 ---> Running in c1e3dd28049a
Collecting flask
  Downloading Flask-2.0.3-py3-none-any.whl (95 kB)
Collecting itsdangerous>=2.0
  Downloading itsdangerous-2.0.1-py3-none-any.whl (18 kB)
Collecting click>=7.1.2
  Downloading click-8.0.4-py3-none-any.whl (97 kB)
Collecting Werkzeug>=2.0
  Downloading Werkzeug-2.0.3-py3-none-any.whl (289 kB)
Collecting Jinja2>=3.0
  Downloading Jinja2-3.0.3-py3-none-any.whl (133 kB)
Collecting importlib-metadata
  Downloading importlib_metadata-4.8.3-py3-none-any.whl (17 kB)
Collecting MarkupSafe>=2.0
  Downloading MarkupSafe-2.0.1-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (30 kB)
Collecting dataclasses
  Downloading dataclasses-0.8-py3-none-any.whl (19 kB)
Collecting typing-extensions>=3.6.4
  Downloading typing_extensions-4.1.1-py3-none-any.whl (26 kB)
Collecting zipp>=0.5
  Downloading zipp-3.6.0-py3-none-any.whl (5.3 kB)
Installing collected packages: zipp, typing-extensions, MarkupSafe, importlib-metadata, dataclasses, Werkzeug, Jinja2, itsdangerous, click, flask
Successfully installed Jinja2-3.0.3 MarkupSafe-2.0.1 Werkzeug-2.0.3 click-8.0.4 dataclasses-0.8 flask-2.0.3 importlib-metadata-4.8.3 itsdangerous-2.0.1 typing-extensions-4.1.1 zipp-3.6.0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
WARNING: You are using pip version 21.2.4; however, version 21.3.1 is available.
You should consider upgrading via the '/usr/local/bin/python -m pip install --upgrade pip' command.
Removing intermediate container c1e3dd28049a
 ---> addc4118236a
Step 3/6 : COPY . /opt/
 ---> 4096872b0508
Step 4/6 : EXPOSE 8080
 ---> Running in 4df001368048
Removing intermediate container 4df001368048
 ---> 91f4283fb6d1
Step 5/6 : WORKDIR /opt
 ---> Running in 9df3ae4d4a9e
Removing intermediate container 9df3ae4d4a9e
 ---> ba21d199946f
Step 6/6 : ENTRYPOINT ["python", "app.py"]
 ---> Running in 3de6178aa9a5
Removing intermediate container 3de6178aa9a5
 ---> 29bacd96d1e0
Successfully built 29bacd96d1e0
Successfully tagged webapp-color:latest
$ 

===========================================================================

Run an instance of the image webapp-color and publish port 8080 on the container to 8282 on the host.


$ 
$ docker run -d -p 8282:8080 webapp-color
d143eb7738c300576920bff313a3ce9af7a5b71e6fbac1253e10ab9707842a62
$ 

===========================================================================

What is the base Operating System used by the python:3.6 image?
If required, run an instance of the image to figure it out.


$ 
$ docker run python:3.6 cat /etc/*release*
PRETTY_NAME="Debian GNU/Linux 11 (bullseye)"
NAME="Debian GNU/Linux"
VERSION_ID="11"
VERSION="11 (bullseye)"
VERSION_CODENAME=bullseye
ID=debian
HOME_URL="https://www.debian.org/"
SUPPORT_URL="https://www.debian.org/support"
BUG_REPORT_URL="https://bugs.debian.org/"
$ 

==========================================================================

What is the approximate size of the webapp-color image?


$ docker images
REPOSITORY                      TAG           IMAGE ID       CREATED         SIZE
webapp-color                    latest        29bacd96d1e0   8 minutes ago   913MB
redis                           latest        eca1379fe8b5   6 months ago    117MB
mysql                           latest        8189e588b0e8   6 months ago    564MB
nginx                           latest        6efc10a0510f   6 months ago    142MB
postgres                        latest        ceccf204404e   6 months ago    379MB
nginx                           alpine        8e75cbc5b25c   7 months ago    41MB
alpine                          latest        9ed4aefc74f6   7 months ago    7.04MB
ubuntu                          latest        08d22c0ceb15   8 months ago    77.8MB
python                          3.6           54260638d07c   22 months ago   902MB
nginx                           1.14-alpine   8a2fb25a19f5   4 years ago     16MB
kodekloud/simple-webapp-mysql   latest        129dd9f67367   5 years ago     96.6MB
kodekloud/simple-webapp         latest        c6e3cd9aae36   5 years ago     84.8MB
$ 

==========================================================================




