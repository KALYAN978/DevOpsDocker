Let us first inspect the environment. How many containers are running on this host?


$ docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                                           NAMES
5d44402c0009   nginx:alpine   "/docker-entrypoint.…"   27 seconds ago   Up 24 seconds   0.0.0.0:3456->3456/tcp, 0.0.0.0:38080->80/tcp   tender_mclean
$ 

===========================================================================================

What is the image used by the container?


$ docker images
REPOSITORY                      TAG       IMAGE ID       CREATED        SIZE
redis                           latest    eca1379fe8b5   6 months ago   117MB
mysql                           latest    8189e588b0e8   6 months ago   564MB
nginx                           latest    6efc10a0510f   6 months ago   142MB
postgres                        latest    ceccf204404e   6 months ago   379MB
nginx                           alpine    8e75cbc5b25c   7 months ago   41MB
alpine                          latest    9ed4aefc74f6   7 months ago   7.04MB
ubuntu                          latest    08d22c0ceb15   8 months ago   77.8MB
kodekloud/simple-webapp-mysql   latest    129dd9f67367   5 years ago    96.6MB
kodekloud/simple-webapp         latest    c6e3cd9aae36   5 years ago    84.8MB
$ docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED              STATUS              PORTS                                           NAMES
5d44402c0009   nginx:alpine   "/docker-entrypoint.…"   About a minute ago   Up About a minute   0.0.0.0:3456->3456/tcp, 0.0.0.0:38080->80/tcp   tender_mclean
$ 

=========================================================================================================

How many ports are published on this container?


$ docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED              STATUS              PORTS                                           NAMES
5d44402c0009   nginx:alpine   "/docker-entrypoint.…"   About a minute ago   Up About a minute   0.0.0.0:3456->3456/tcp, 0.0.0.0:38080->80/tcp   tender_mclean
$ 

=========================================================================================================

Which of the below ports are published on Host?

$ docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED              STATUS              PORTS                                           NAMES
5d44402c0009   nginx:alpine   "/docker-entrypoint.…"   About a minute ago   Up About a minute   0.0.0.0:3456->3456/tcp, 0.0.0.0:38080->80/tcp   tender_mclean
$ 

=========================================================================================================
Run an instance of kodekloud/simple-webapp with a tag blue and map port 8080 on the container to 38282 on the host.



$ docker run -t blue  -p 38282:8080 kodekloud/simple-webapp
Unable to find image 'blue:latest' locally
docker: Error response from daemon: pull access denied for blue, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.
See 'docker run --help'.
$ docker run -d  -p 38282:8080 kodek/simple-webapp:blue
Unable to find image 'kodek/simple-webapp:blue' locally
docker: Error response from daemon: pull access denied for kodek/simple-webapp, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.
See 'docker run --help'.
$ docker run -p 38282:8080 kodekloud/simple-webapp:blue
Unable to find image 'kodekloud/simple-webapp:blue' locally
blue: Pulling from kodekloud/simple-webapp
4fe2ade4980c: Already exists 
7cf6a1d62200: Already exists 
f0d690b9e495: Already exists 
fac5d45ad062: Already exists 
a6fc8a0deb7d: Pull complete 
f43c8e496f88: Pull complete 
58ca939f7651: Pull complete 
095a1a007cdb: Pull complete 
Digest: sha256:9caf15476dc60b77c7460791bea8ea5f6ca02b90199aabe088beea83bc943fe5
Status: Downloaded newer image for kodekloud/simple-webapp:blue
 * Serving Flask app "app" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://0.0.0.0:8080/ (Press CTRL+C to quit)

